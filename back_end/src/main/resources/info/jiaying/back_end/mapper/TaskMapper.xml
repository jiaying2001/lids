<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="info.jiaying.back_end.mapper.TaskMapper">
  <resultMap id="BaseResultMap" type="info.jiaying.back_end.model.Task">
    <id column="task_id" jdbcType="INTEGER" property="taskId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="task_uuid" jdbcType="VARCHAR" property="taskUuid" />
    <result column="task_type" jdbcType="VARCHAR" property="taskType" />
    <result column="task_stage" jdbcType="VARCHAR" property="taskStage" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="priority" jdbcType="INTEGER" property="priority" />
    <result column="crt_retry_num" jdbcType="INTEGER" property="crtRetryNum" />
    <result column="max_retry_num" jdbcType="INTEGER" property="maxRetryNum" />
    <result column="max_retry_interval" jdbcType="INTEGER" property="maxRetryInterval" />
    <result column="schedule_log" jdbcType="VARCHAR" property="scheduleLog" />
    <result column="task_context" jdbcType="VARCHAR" property="taskContext" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="order_time" jdbcType="BIGINT" property="orderTime" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="modify_time" jdbcType="BIGINT" property="modifyTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    task_id, user_id, task_uuid, task_type, task_stage, status, priority, crt_retry_num, 
    max_retry_num, max_retry_interval, schedule_log, task_context, file_name, order_time, 
    create_time, modify_time
  </sql>
  <select id="selectByExample" parameterType="info.jiaying.back_end.model.TaskExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from task
    where task_id = #{taskId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from task
    where task_id = #{taskId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="info.jiaying.back_end.model.TaskExample">
    delete from task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="info.jiaying.back_end.model.Task">
    <selectKey keyProperty="taskId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into task (user_id, task_uuid, task_type, 
      task_stage, status, priority, 
      crt_retry_num, max_retry_num, max_retry_interval, 
      schedule_log, task_context, file_name, 
      order_time, create_time, modify_time
      )
    values (#{userId,jdbcType=VARCHAR}, #{taskUuid,jdbcType=VARCHAR}, #{taskType,jdbcType=VARCHAR}, 
      #{taskStage,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{priority,jdbcType=INTEGER}, 
      #{crtRetryNum,jdbcType=INTEGER}, #{maxRetryNum,jdbcType=INTEGER}, #{maxRetryInterval,jdbcType=INTEGER}, 
      #{scheduleLog,jdbcType=VARCHAR}, #{taskContext,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR}, 
      #{orderTime,jdbcType=BIGINT}, #{createTime,jdbcType=BIGINT}, #{modifyTime,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="info.jiaying.back_end.model.Task">
    <selectKey keyProperty="taskId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="taskUuid != null">
        task_uuid,
      </if>
      <if test="taskType != null">
        task_type,
      </if>
      <if test="taskStage != null">
        task_stage,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="priority != null">
        priority,
      </if>
      <if test="crtRetryNum != null">
        crt_retry_num,
      </if>
      <if test="maxRetryNum != null">
        max_retry_num,
      </if>
      <if test="maxRetryInterval != null">
        max_retry_interval,
      </if>
      <if test="scheduleLog != null">
        schedule_log,
      </if>
      <if test="taskContext != null">
        task_context,
      </if>
      <if test="fileName != null">
        file_name,
      </if>
      <if test="orderTime != null">
        order_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="taskUuid != null">
        #{taskUuid,jdbcType=VARCHAR},
      </if>
      <if test="taskType != null">
        #{taskType,jdbcType=VARCHAR},
      </if>
      <if test="taskStage != null">
        #{taskStage,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="priority != null">
        #{priority,jdbcType=INTEGER},
      </if>
      <if test="crtRetryNum != null">
        #{crtRetryNum,jdbcType=INTEGER},
      </if>
      <if test="maxRetryNum != null">
        #{maxRetryNum,jdbcType=INTEGER},
      </if>
      <if test="maxRetryInterval != null">
        #{maxRetryInterval,jdbcType=INTEGER},
      </if>
      <if test="scheduleLog != null">
        #{scheduleLog,jdbcType=VARCHAR},
      </if>
      <if test="taskContext != null">
        #{taskContext,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null">
        #{orderTime,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="info.jiaying.back_end.model.TaskExample" resultType="java.lang.Long">
    select count(*) from task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update task
    <set>
      <if test="record.taskId != null">
        task_id = #{record.taskId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.taskUuid != null">
        task_uuid = #{record.taskUuid,jdbcType=VARCHAR},
      </if>
      <if test="record.taskType != null">
        task_type = #{record.taskType,jdbcType=VARCHAR},
      </if>
      <if test="record.taskStage != null">
        task_stage = #{record.taskStage,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.priority != null">
        priority = #{record.priority,jdbcType=INTEGER},
      </if>
      <if test="record.crtRetryNum != null">
        crt_retry_num = #{record.crtRetryNum,jdbcType=INTEGER},
      </if>
      <if test="record.maxRetryNum != null">
        max_retry_num = #{record.maxRetryNum,jdbcType=INTEGER},
      </if>
      <if test="record.maxRetryInterval != null">
        max_retry_interval = #{record.maxRetryInterval,jdbcType=INTEGER},
      </if>
      <if test="record.scheduleLog != null">
        schedule_log = #{record.scheduleLog,jdbcType=VARCHAR},
      </if>
      <if test="record.taskContext != null">
        task_context = #{record.taskContext,jdbcType=VARCHAR},
      </if>
      <if test="record.fileName != null">
        file_name = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.orderTime != null">
        order_time = #{record.orderTime,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update task
    set task_id = #{record.taskId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=VARCHAR},
      task_uuid = #{record.taskUuid,jdbcType=VARCHAR},
      task_type = #{record.taskType,jdbcType=VARCHAR},
      task_stage = #{record.taskStage,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      priority = #{record.priority,jdbcType=INTEGER},
      crt_retry_num = #{record.crtRetryNum,jdbcType=INTEGER},
      max_retry_num = #{record.maxRetryNum,jdbcType=INTEGER},
      max_retry_interval = #{record.maxRetryInterval,jdbcType=INTEGER},
      schedule_log = #{record.scheduleLog,jdbcType=VARCHAR},
      task_context = #{record.taskContext,jdbcType=VARCHAR},
      file_name = #{record.fileName,jdbcType=VARCHAR},
      order_time = #{record.orderTime,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=BIGINT},
      modify_time = #{record.modifyTime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="info.jiaying.back_end.model.Task">
    update task
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="taskUuid != null">
        task_uuid = #{taskUuid,jdbcType=VARCHAR},
      </if>
      <if test="taskType != null">
        task_type = #{taskType,jdbcType=VARCHAR},
      </if>
      <if test="taskStage != null">
        task_stage = #{taskStage,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="priority != null">
        priority = #{priority,jdbcType=INTEGER},
      </if>
      <if test="crtRetryNum != null">
        crt_retry_num = #{crtRetryNum,jdbcType=INTEGER},
      </if>
      <if test="maxRetryNum != null">
        max_retry_num = #{maxRetryNum,jdbcType=INTEGER},
      </if>
      <if test="maxRetryInterval != null">
        max_retry_interval = #{maxRetryInterval,jdbcType=INTEGER},
      </if>
      <if test="scheduleLog != null">
        schedule_log = #{scheduleLog,jdbcType=VARCHAR},
      </if>
      <if test="taskContext != null">
        task_context = #{taskContext,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null">
        order_time = #{orderTime,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=BIGINT},
      </if>
    </set>
    where task_id = #{taskId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="info.jiaying.back_end.model.Task">
    update task
    set user_id = #{userId,jdbcType=VARCHAR},
      task_uuid = #{taskUuid,jdbcType=VARCHAR},
      task_type = #{taskType,jdbcType=VARCHAR},
      task_stage = #{taskStage,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      priority = #{priority,jdbcType=INTEGER},
      crt_retry_num = #{crtRetryNum,jdbcType=INTEGER},
      max_retry_num = #{maxRetryNum,jdbcType=INTEGER},
      max_retry_interval = #{maxRetryInterval,jdbcType=INTEGER},
      schedule_log = #{scheduleLog,jdbcType=VARCHAR},
      task_context = #{taskContext,jdbcType=VARCHAR},
      file_name = #{fileName,jdbcType=VARCHAR},
      order_time = #{orderTime,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=BIGINT},
      modify_time = #{modifyTime,jdbcType=BIGINT}
    where task_id = #{taskId,jdbcType=INTEGER}
  </update>
  <select id="selectWithLimit" resultMap="BaseResultMap">
    select * from `task`
    where `task_type` = #{task_type} and
          `status` = #{status}
    limit #{limit}
  </select>
</mapper>